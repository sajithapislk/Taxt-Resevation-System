// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Schema;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("backend.Schema.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DriverState")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("LastModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("DeletedUserId");

                    b.HasIndex("LastModifiedUserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@system.com",
                            IsRegistered = true,
                            MobileNo = "0712312312",
                            Name = "System",
                            Password = "$argon2id$v=19$m=65536,t=3,p=1$CirmKlyeYwklHWRXahKSFw$uLLG1lnOho+QELUcfy/IMLDLUloqz5pde2DR4LivAww",
                            Role = (byte)4,
                            Username = "admin_1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "sajith@apis.lk",
                            IsRegistered = true,
                            MobileNo = "0772193832",
                            Name = "Sajith",
                            Password = "$argon2id$v=19$m=65536,t=3,p=1$IsE1BR8aCwx8yah4Wb+w4A$nIwjCwXTZnb7Zp7UxiK5/9BxGbKb9pRbhhCQXjoItKs",
                            Role = (byte)3,
                            Username = "sajith_2"
                        },
                        new
                        {
                            Id = 3,
                            Email = "mohammedsaheer987@gmail.com",
                            IsRegistered = true,
                            MobileNo = "0712805509",
                            Name = "Saheer",
                            Password = "$argon2id$v=19$m=65536,t=3,p=1$cLA1YaLZzp3NKHCGTyzF0w$zCsm7FNUGWEVMXsEUf5Od3UQMVqo2FkN1UX0iT0CV0Y",
                            Role = (byte)3,
                            Username = "mohammedsaheer987_3"
                        },
                        new
                        {
                            Id = 4,
                            Email = "abduljizzi@gmail.com",
                            IsRegistered = true,
                            MobileNo = "0759424247",
                            Name = "Abdul",
                            Password = "$argon2id$v=19$m=65536,t=3,p=1$YfLFmzRV57ujDj+7KwdnDg$QhxxSvb1zyTsfgND74Bler+MQlZdka3ISF7hcL/Bspc",
                            Role = (byte)2,
                            Username = "abduljizzi_4"
                        },
                        new
                        {
                            Id = 5,
                            Email = "nifraz@live.com",
                            IsRegistered = true,
                            MobileNo = "0712319319",
                            Name = "Nifraz",
                            Password = "$argon2id$v=19$m=65536,t=3,p=1$enPyEcGSd7+uW4PJO5xn+Q$IjOcIF2XrQ2NdUQ+Aptd6jPyn8HAfJKLtYKP0YlzVN0",
                            Role = (byte)2,
                            Username = "nifraz_5"
                        });
                });

            modelBuilder.Entity("backend.Schema.Entity.User", b =>
                {
                    b.HasOne("backend.Schema.Entity.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("backend.Schema.Entity.User", "DeletedUser")
                        .WithMany()
                        .HasForeignKey("DeletedUserId");

                    b.HasOne("backend.Schema.Entity.User", "LastModifiedUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedUserId");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("LastModifiedUser");
                });
#pragma warning restore 612, 618
        }
    }
}
